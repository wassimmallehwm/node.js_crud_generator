(this["webpackJsonpcrud-generator"]=this["webpackJsonpcrud-generator"]||[]).push([[3],{138:function(n,e,t){"use strict";t.r(e),t.d(e,"ControllersGenerator",(function(){return a}));var r=t(12),s=t(14),o=function(n){var e="\nmodule.exports.create = async(req, res) => {\n  try {\n    const item = new ".concat(n.entity_name,'(req.body);\n\n    const result = await item.save();\n    return res.status(200).json(result);\n  } catch (err) {\n    console.log("').concat(n.entity_name,' creation failed: " + err);\n    return res.status(500).json({\n      message: "Error while trying to create ').concat(n.entity_name,'",\n    });\n  }\n};\n    '),t="\nmodule.exports.getAll = async(req, res) => {\n  try {\n    let query = req.query || {};\n    const result = await ".concat(n.entity_name,'.find(query);\n\n    return res.status(200).json(result);\n  } catch (err) {\n    console.log("').concat(n.entity_name,' getAll failed: " + err);\n    return res.status(500).json({\n      message: "Error while trying to get ').concat(n.entity_name,'",\n    });\n  }\n};\n\nmodule.exports.getById = async(req, res) => {\n  try {\n    const { id } = req.params;\n    const result = await ').concat(n.entity_name,'.findById(id);\n\n    return res.status(200).json(result);\n  } catch (err) {\n    console.log("').concat(n.entity_name,' getById failed: " + err);\n    return res.status(500).json({\n      message: "Error while trying to get ').concat(n.entity_name,'",\n    });\n  }\n};\n    '),r="\nmodule.exports.update = async(req, res) => {\n  try {\n    const { id } = req.params;\n    const result = await ".concat(n.entity_name,'.findOneAndUpdate({ _id: id}, req.body, { new: true });\n\n    return res.status(200).json(result);\n  } catch (err) {\n    console.log("').concat(n.entity_name,' update failed: " + err);\n    return res.status(500).json({\n      message: "Error while trying to update ').concat(n.entity_name,'",\n    });\n  }\n};\n    '),s="\nmodule.exports.remove = async(req, res) => {\n  try {\n    const { id } = req.params;\n\n    const result = await ".concat(n.entity_name,'.deleteOne({ _id: id});\n    return res.status(200).json(result);\n  } catch (err) {\n    console.log("').concat(n.entity_name,' delete failed: " + err);\n    return res.status(500).json({\n      message: "Error while trying to delete ').concat(n.entity_name,'",\n    });\n  }\n};\n    '),o=n.entity_paginated?"\nmodule.exports.getList = async(req, res) => {\n    const { page = 1, limit = 20, sortField, sortDir } = req.query;\n    const options = {\n        page: parseInt(page, 10),\n        limit: parseInt(limit, 10),\n        sort: {}\n\n    };\n\n    if (sortField && sortDir) {\n        options.sort = {\n            [sortField]: sortDir\n        }\n    }\n\n    return res.status(200).json(result);\n    ".concat(n.entity_name,'.paginate({}, options)\n    .then(\n        result => {\n            res.status(200).json(result);\n        }\n    )\n    .catch(\n        error => {\n            return res.status(500).json({\n                message: "Error while trying to get ').concat(n.entity_name,'",\n            });\n        }\n    );\n};\n    '):"";return"const ".concat(n.entity_name,' = require("../models/').concat(n.entity_name.toLocaleLowerCase(),'");\n      ').concat(e,"\n      ").concat(t,"\n      ").concat(o,"\n      ").concat(r,"\n      ").concat(s,"\n      ")},a=function(){function n(){Object(r.a)(this,n)}return Object(s.a)(n,null,[{key:"generateControllers",value:function(n,e){var t=null===e||void 0===e?void 0:e.folder("controllers");n.forEach((function(n){null===t||void 0===t||t.file("".concat(n.entity_name.toLocaleLowerCase(),".controller.js"),o(n))}))}}]),n}()}}]);
//# sourceMappingURL=3.c2087d9c.chunk.js.map