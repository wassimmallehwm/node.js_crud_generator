{"version":3,"sources":["Components/shared/ShadowBox/styles.js","Components/app-generator/entities-generator lazy /^/.*/controllers/-generator$/ groupOptions: {} namespace object","Components/app-generator/entities-generator lazy /^/.*/models/-generator$/ groupOptions: {} namespace object","Components/app-generator/entities-generator lazy /^/.*/routes/-generator$/ groupOptions: {} namespace object","types/Settings.ts","services/api.service.ts","Components/shared/Switch/styles.js","Components/shared/Switch/switch.js","Components/shared/ShadowBox/shadowBox.js","Components/shared/Select/select.js","Components/shared/MultipleSelect/MultipleSelect.js","Components/shared/SearchSelect/SearchSelect.js","types/Dependency.ts","Components/app-settings/AppSettings.tsx","assets/plus.svg","Components/entities/EntityButton.js","types/Entity.ts","assets/x.svg","Components/entities/field/FieldItem.tsx","types/Field.ts","Components/entities/entity-modal/EntityModal.tsx","Components/entities/entity-item/Item.js","assets/pencil.svg","Components/entities/entity-item/EntityItem.tsx","Components/entities/Entities.tsx","Components/app-generator/entities-generator/EntitiesGenerator.ts","Components/app-generator/setup-generator/database-generator/template.js","Components/app-generator/setup-generator/database-generator/DatabaseGenerator.ts","Components/app-generator/setup-generator/env-generator/template.js","Components/app-generator/setup-generator/env-generator/EnvGenerator.ts","Components/app-generator/setup-generator/index-generator/template.js","Components/app-generator/setup-generator/index-generator/IndexGenerator.ts","Components/app-generator/setup-generator/middleware-generator/template.js","Components/app-generator/setup-generator/middleware-generator/MiddlewareGenerator.ts","Components/app-generator/setup-generator/package-generator/template.js","Components/app-generator/setup-generator/package-generator/PackageGenerator.ts","Components/app-generator/setup-generator/SetupGenerator.ts","Components/app-generator/AppGenerator.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledShadowBox","styled","div","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Settings","json","project_name","database","database_orm","dependencies","authentication","auth_type","this","APIService","configValue","process","apiUrl","method","headers","a","options","url","Accept","Axios","search","httpClient","StyledSwitchContainer","Switch","props","useState","_uniqueId","checked","setChecked","type","className","value","onChange","event","newChecked","htmlFor","propsTypes","PropTypes","bool","func","ShadowBox","require","Select","Form","Control","as","disabled","hidden","option","displayOption","displayAttr","complex","JSON","stringify","MultipleSelect","isLoading","placeholder","labelKey","renderMenuItemChildren","onInputChange","selected","filterBy","multiple","onSearch","SearchSelect","Dependency","name","version","AppSettings","settings","onChangeSettings","setSettings","apiService","useRef","setOptions","optionsLoading","setOptionsLoading","dbOrmOptions","setDbOrmOptions","useEffect","prev","initSettings","init_options","database_options","orm","findPacks","console","log","current","findNpmPacks","result","tab","data","objects","forEach","element","push","package","error","finally","style","borderBottom","padding","color","Label","width","Group","minWidth","text","EntityButton","button","absolute","top","hover","Entity","entity_id","entity_name","entity_fields","entity_timestamp","entity_paginated","date","Date","getTime","FieldItem","field","index","entityName","onFieldChange","onFieldRemove","onFieldTypeChange","entitiesLabels","fieldType","setFieldType","complexType","setComplexType","handleChange","checkbox","field_type","field_types","find","elem","alignItems","justifyContent","margin","flexWrap","field_name","field_default","parse","target","filter","field_ref","field_required","field_unique","onClick","src","xIcon","Field","EntityModal","show","save","closeModal","entity","setEntity","handleCheckBoxChange","i","typeOrRef","Modal","onHide","size","centered","Header","closeButton","Title","Body","Row","label","position","right","init_field","plusIcon","maxHeight","overflowY","Footer","Button","variant","length","Item","EntityItem","editEntity","pencilIcon","Entities","entities","setEntities","currentEntity","setCurrentEntity","showModal","setShowModal","editMode","setEditMode","openModal","init_entity","setTimeout","EntitiesGenerator","directory","ControllersGenerator","ModelsGenerator","RoutesGenerator","generateModel","generateControllers","generateRoute","dbTemplate","DatabaseGenerator","folder","file","envTemplate","EnvGenerator","indexTemplate","IndexGenerator","middlewareTemplate","entitiesRoutes","toLowerCase","MiddlewareGenerator","middleware","packTemplate","depArray","init_dependencies","replace","PackageGenerator","SetupGenerator","generatePackage","generateEnv","generateIndex","generateDatabase","generateMiddleware","saveAs","AppGenerator","zip","JSZip","generateSetup","generateEntities","generateAsync","content","App","init_settings","setEntitiesLabels","res","invalidAction","trim","minHeight","background","generateApp","boxShadow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24f800b5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledShadowBox = styled.div`\r\n  display: flex;\r\n  min-width: 200px;\r\n  height: 100%;\r\n  background: white;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  -webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);\r\n  -moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);\r\n  flex-grow: 1;\r\n  flex-basis: 200px;\r\n  overflow: auto;\r\n`;\r\n\r\nexport { StyledShadowBox };\r\n","var map = {\n\t\"./mongoDB/mongoose/controllers-generator\": [\n\t\t138,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 128;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./mongoDB/mongoose/models-generator\": [\n\t\t139,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 129;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./mongoDB/mongoose/routes-generator\": [\n\t\t140,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 130;\nmodule.exports = webpackAsyncContext;","import { Dependency } from \"./Dependency\";\r\n\r\nexport class Settings {\r\n    project_name: string;\r\n    database: string;\r\n    database_orm: string;\r\n    dependencies: Dependency[];\r\n    authentication: boolean;\r\n    auth_type: string;\r\n\r\n    constructor(json?: {\r\n        project_name: string;\r\n        database: string;\r\n        database_orm: string;\r\n        dependencies: Dependency[];\r\n        authentication: boolean;\r\n        auth_type: string;\r\n    }) {\r\n        this.project_name = json?.project_name!;\r\n        this.database = json?.database!;\r\n        this.database_orm = json?.database_orm!;\r\n        this.dependencies = json?.dependencies!;\r\n        this.authentication = json?.authentication!;\r\n        this.auth_type = json?.auth_type!;\r\n    }\r\n}\r\n","import Axios, { Method } from \"axios\";\r\n\r\nexport class APIService {\r\n\r\n    configValue: string = process.env.REACT_APP_NPM_URL!;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    async httpClient(apiUrl: string, method: Method, headers?: any){\r\n        const options = {\r\n            url: `${apiUrl}`,\r\n            method: method,\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json;charset=UTF-8\",\r\n              ...headers\r\n            },\r\n          };\r\n\r\n        return Axios(options);\r\n    }\r\n\r\n    async findNpmPacks(search: string){\r\n        const url: string = `${this.configValue}${search}&size=5`; \r\n        return this.httpClient(url, 'GET');\r\n    }\r\n}","import styled from \"styled-components\";\r\n\r\nconst StyledSwitchContainer = styled.div`\r\n  & {\r\n    position: relative;\r\n    width: 40px;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n  }\r\n  .onoffswitch-checkbox {\r\n    position: absolute;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n  .onoffswitch-label {\r\n    display: block;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    height: 20px;\r\n    padding: 0;\r\n    line-height: 20px;\r\n    border: 2px solid #e3e3e3;\r\n    border-radius: 20px;\r\n    background-color: #ffffff;\r\n    transition: background-color 0.3s ease-in;\r\n  }\r\n  .onoffswitch-label:before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 20px;\r\n    margin: 0px;\r\n    background: #ffffff;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 18px;\r\n    border: 2px solid #e3e3e3;\r\n    border-radius: 20px;\r\n    transition: all 0.3s ease-in 0s;\r\n  }\r\n  .onoffswitch-checkbox:checked + .onoffswitch-label {\r\n    background-color: #007bff;\r\n  }\r\n  .onoffswitch-checkbox:checked + .onoffswitch-label,\r\n  .onoffswitch-checkbox:checked + .onoffswitch-label:before {\r\n    border-color: #007bff;\r\n  }\r\n  .onoffswitch-checkbox:checked + .onoffswitch-label:before {\r\n    right: 0px;\r\n  }\r\n`;\r\n\r\nexport { StyledSwitchContainer };\r\n","import React, { useState } from \"react\";\r\nimport { StyledSwitchContainer } from \"./styles\";\r\nimport _uniqueId from \"lodash/uniqueId\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Switch(props) {\r\n  const [id] = useState(_uniqueId(\"switch-\"));\r\n  const [checked, setChecked] = useState(props.checked);\r\n\r\n  function handleChange(event) {\r\n    const newChecked = !checked;\r\n    setChecked(newChecked);\r\n    if (props.onChange) props.onChange(newChecked);\r\n  }\r\n\r\n  return (\r\n    <StyledSwitchContainer>\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"onoffswitch-checkbox\"\r\n        id={id}\r\n        value={\"checked\"}\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        {...props}\r\n      />\r\n      <label className=\"onoffswitch-label\" htmlFor={id}></label>\r\n    </StyledSwitchContainer>\r\n  );\r\n}\r\n\r\nSwitch.propsTypes = {\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Switch;\r\n","const { StyledShadowBox: ShadowBox } = require(\"./styles\");\r\n\r\nexport default ShadowBox;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nfunction Select(props) {\r\n  return (\r\n    <Form.Control as=\"select\" {...props}>\r\n      <option key={0} disabled hidden></option>\r\n      {props.options?.map((option) => {\r\n        const displayOption = props.displayAttr? option[props.displayAttr] : option;\r\n        return (\r\n          <option key={displayOption} value={props.complex ? JSON.stringify(option) : displayOption}>\r\n            {displayOption}\r\n          </option>\r\n        );\r\n      })}\r\n    </Form.Control>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react'\r\nimport { Typeahead, AsyncTypeahead } from 'react-bootstrap-typeahead';\r\n\r\nconst MultipleSelect = ({\r\n    isLoading,\r\n    id = \"multiselect\",\r\n    placeholder,\r\n    options,\r\n    labelKey = (option) => `${option}`,\r\n    renderMenuItemChildren = (option) => <span>{option}</span>,\r\n    onChange,\r\n    onInputChange,\r\n    selected,\r\n    filterBy = () => true\r\n}) => {\r\n    return (\r\n        <AsyncTypeahead\r\n            multiple\r\n            selected={selected}\r\n            onChange={onChange}\r\n            filterBy={filterBy}\r\n            id={id}\r\n            isLoading={isLoading}\r\n            labelKey={labelKey}\r\n            onSearch={onInputChange}\r\n            options={options}\r\n            placeholder={placeholder}\r\n            renderMenuItemChildren={renderMenuItemChildren}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MultipleSelect\r\n","import React from \"react\";\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nfunction SearchSelect({\r\n  // isLoading = false,\r\n  id = \"select\",\r\n  // placeholder = \"\",\r\n  options,\r\n  // labelKey = (option) => `${option}`,\r\n  // renderMenuItemChildren = (option) => <span>{option}</span>,\r\n  onChange,\r\n  // onInputChange = () => {},\r\n  // selected = [],\r\n  // filterBy = () => true\r\n}) {\r\n  return (\r\n    <Typeahead\r\n      // selected={selected}\r\n      onChange={onChange}\r\n      // filterBy={filterBy}\r\n      id={id}\r\n      // isLoading={isLoading}\r\n      // labelKey={labelKey}\r\n      // onSearch={onInputChange}\r\n      options={options}\r\n      // placeholder={placeholder}\r\n      // renderMenuItemChildren={renderMenuItemChildren}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchSelect;\r\n","export class Dependency {\r\n    name: string;\r\n    version: string;\r\n\r\n    constructor(json?: {\r\n        name: string,\r\n        version: string\r\n    }) {\r\n        this.name = json?.name!;\r\n        this.version = json?.version!;\r\n    }\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form } from 'react-bootstrap';\r\nimport { APIService } from '../../services/api.service';\r\nimport { ShadowBox, Select, MultipleSelect } from '../shared';\r\nimport { Settings } from '../../types/Settings';\r\nimport initSettings from '../../initial_settings.json';\r\nimport { useEffect } from 'react';\r\nimport { Dependency } from '../../types/Dependency';\r\n\r\ninterface AppSettingsProps {\r\n    settings: Settings;\r\n    onChangeSettings: any;\r\n    setSettings: any;\r\n}\r\n\r\nconst AppSettings = ({\r\n    settings,\r\n    onChangeSettings,\r\n    setSettings\r\n}: AppSettingsProps) => {\r\n    const apiService = useRef(new APIService());\r\n    const [options, setOptions] = useState<any>([]);\r\n    const [optionsLoading, setOptionsLoading] = useState<boolean>(false);\r\n    const [dbOrmOptions, setDbOrmOptions] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        setSettings((prev: Settings) => ({\r\n            ...prev,\r\n            database_orm: initSettings.init_options.database_options[0].orm[0],\r\n            database: initSettings.init_options.database_options[0].name\r\n        }));\r\n        setDbOrmOptions(initSettings.init_options.database_options[0].orm);\r\n        //addSpecificPaq('mongoose');\r\n    }, [])\r\n\r\n    const handlePackSelectChange = (selected: any[]) => {\r\n        let tab: Dependency[] = [];\r\n        selected.forEach(element => {\r\n            tab.push(new Dependency(element))\r\n        });\r\n        setSettings((prev: Settings) => ({\r\n            ...prev,\r\n            dependencies: tab\r\n        }))\r\n        console.log(selected)\r\n    }\r\n    const handlePackInputChange = (text: string, event: any) => {\r\n        findPacks(text)\r\n    }\r\n\r\n    const addSpecificPaq = (search: string) => {\r\n        apiService.current.findNpmPacks(search).then(\r\n            result => {\r\n                let tab: any[] = [];\r\n                const pack = result.data.objects.find((elem: any) => elem.package.name === search);\r\n                if(pack){\r\n                    setSettings((prev: Settings) => ({\r\n                        ...prev,\r\n                        dependencies: [...prev.dependencies, {\r\n                            name: pack.package.name,\r\n                            version: pack.package.version\r\n                        }]\r\n                    }))\r\n                }\r\n            },\r\n            error => console.error(error)\r\n        );\r\n    }\r\n\r\n    const findPacks = (search: string) => {\r\n        console.log(search)\r\n        setOptionsLoading(true);\r\n        apiService.current.findNpmPacks(search).then(\r\n            result => {\r\n                let tab: any[] = [];\r\n                result.data.objects.forEach((element: any) => {\r\n                    tab.push({\r\n                        name: element.package.name,\r\n                        version: element.package.version\r\n                    })\r\n                });\r\n                setOptions(tab)\r\n            },\r\n            error => console.error(error)\r\n        ).finally(() => setOptionsLoading(false));\r\n    }\r\n\r\n\r\n    return (\r\n        <ShadowBox>\r\n            <h5 style={{borderBottom: '1px solid #5c5c5c', padding: '.5rem' ,color: '#5c5c5c'}} >App settings</h5>\r\n            <div className=\"d-flex flex-row flex-wrap\">\r\n                <div className=\"p-2 col-6\">\r\n                    <Form.Label>Project Name:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"My awesome project\"\r\n                        value={settings.project_name}\r\n                        name=\"project_name\"\r\n                        onChange={onChangeSettings}\r\n                    />\r\n                </div>\r\n                <div className=\"p-2 col-6\">\r\n                    <Form.Group style={{ minWidth: \"150px\" }}>\r\n                        <Form.Label>Database</Form.Label>\r\n                        <Select\r\n                            options={initSettings.init_options.database_options}\r\n                            name=\"database\"\r\n                            displayAttr=\"name\"\r\n                            value={settings.database}\r\n                            onChange={onChangeSettings}\r\n                        />\r\n                    </Form.Group>\r\n                </div>\r\n                <div className=\"p-2 col-6\">\r\n                    <Form.Group style={{ minWidth: \"150px\" }}>\r\n                        <Form.Label>Database ORM/ODM</Form.Label>\r\n                        <Select\r\n                            options={dbOrmOptions}\r\n                            name=\"database_orm\"\r\n                            value={settings.database_orm}\r\n                            onChange={onChangeSettings}\r\n                        />\r\n                    </Form.Group>\r\n                </div>\r\n                <div className=\"p-2 col-6\">\r\n                    <Form.Group style={{ width: \"100%\" }}>\r\n                        <Form.Label>Npm packages</Form.Label>\r\n                        <MultipleSelect\r\n                            isLoading={optionsLoading}\r\n                            onChange={handlePackSelectChange}\r\n                            onInputChange={handlePackInputChange}\r\n                            options={options}\r\n                            selected={settings.dependencies}\r\n                            placeholder=\"Search for a npm package...\"\r\n                            labelKey={(option: any) => `${option.name} (${option.version})`}\r\n                            renderMenuItemChildren={(option: any) => (\r\n                                <span>{option.name} ({option.version})</span>\r\n                            )}\r\n                        />\r\n                    </Form.Group>\r\n                </div>\r\n            </div>\r\n        </ShadowBox>\r\n    )\r\n}\r\n\r\nexport default AppSettings\r\n","export default __webpack_public_path__ + \"static/media/plus.5e21677f.svg\";","import styled from \"styled-components\";\r\n\r\nconst EntityButton = styled.button`\r\n    background: ${props => props.color ? props.color : \"#b3b3b33\"};\r\n    border: none;\r\n    border-radius: 50%;\r\n    height: 30px;\r\n    width: 30px;\r\n    position: ${props => props.absolute ? \"absolute\" : \"\"};\r\n    right: ${props => props.top ? props.top + 'px' : \"30px\"};\r\n    top: ${props => props.top ? props.top + 'px' : \"40px\"};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-shadow: 0px 0px 5px 1px rgb(0 0 0 / 20%);\r\n    &:hover {\r\n        background: ${props => props.hover ? props.hover : \"#7c7c7c8a\"};\r\n    }\r\n    &:focus {\r\n        border: none;\r\n    }\r\n`;\r\n\r\nexport { EntityButton };\r\n","import { Field } from \"./Field\";\r\n\r\nexport class Entity {\r\n    entity_id: number;\r\n    entity_name: string;\r\n    entity_fields: Field[];\r\n    entity_timestamp: boolean;\r\n    entity_paginated: boolean;\r\n\r\n    constructor(json?: {\r\n        entity_name: string,\r\n        entity_fields: Field[],\r\n        entity_timestamp: boolean,\r\n        entity_paginated: boolean,\r\n    }) {\r\n        const date = new Date();\r\n        this.entity_id = date.getTime();\r\n        this.entity_name = json?.entity_name!;\r\n        this.entity_fields = json?.entity_fields!;\r\n        this.entity_timestamp = json?.entity_timestamp!;\r\n        this.entity_paginated = json?.entity_paginated!;\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/x.85f9f2a1.svg\";","import React, { useState } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { Field } from '../../../types/Field'\r\nimport { EntityButton } from '../EntityButton'\r\nimport xIcon from '../../../assets/x.svg';\r\nimport initSettings from '../../../initial_settings.json';\r\nimport { Select, Switch } from '../../shared';\r\nimport { useEffect } from 'react';\r\n\r\ninterface FieldItemProps {\r\n    field: Field;\r\n    index: number;\r\n    entityName: string;\r\n    onFieldChange: any;\r\n    onFieldRemove: any;\r\n    onFieldTypeChange: any;\r\n    entitiesLabels: string[];\r\n}\r\n\r\nconst FieldItem = ({\r\n    field,\r\n    index,\r\n    entityName,\r\n    onFieldChange,\r\n    onFieldRemove,\r\n    onFieldTypeChange,\r\n    entitiesLabels\r\n}: FieldItemProps) => {\r\n\r\n    const [fieldType, setFieldType] = useState<any>();\r\n    const [complexType, setComplexType] = useState<boolean>(false);\r\n\r\n    const handleChange = (e: any, checkbox = false) => {\r\n        onFieldChange(e, index, checkbox)\r\n    }\r\n\r\n    const handleTypeChange = (e: any) => {\r\n        const type: any = JSON.parse(e.target.value);\r\n        onFieldTypeChange(\"field_type\", type.type, index)\r\n        setFieldType(type);\r\n        setComplexType(type.complex);\r\n    }\r\n\r\n    const handleRefChange = (e: any) => {\r\n        onFieldTypeChange(\"field_ref\", e.target.value, index)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (field.field_type && field.field_type != \"\") {\r\n            const type = initSettings.field_types.find(elem => elem.type == field.field_type)\r\n            setFieldType(type);\r\n            setComplexType(type!.complex);\r\n        } else {\r\n            setFieldType(initSettings.field_types[0]);\r\n            onFieldTypeChange(\"field_type\", initSettings.field_types[0].type, index)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            margin: '1rem 0',\r\n            flexWrap: 'wrap'\r\n        }}>\r\n            <Form.Group style={{ margin: '.5rem 0' }}>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    style={{ width: \"150px\" }}\r\n                    placeholder=\"Field name\"\r\n                    value={field.field_name}\r\n                    name=\"field_name\"\r\n                    onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group style={{ margin: '.5rem 0' }}>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    style={{ width: \"150px\" }}\r\n                    placeholder=\"Default value\"\r\n                    value={field.field_default}\r\n                    name=\"field_default\"\r\n                    onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Select\r\n                complex\r\n                style={{ width: \"fit-content\" }}\r\n                options={initSettings.field_types}\r\n                name=\"field_type\"\r\n                displayAttr=\"label\"\r\n                value={JSON.stringify(fieldType)}\r\n                onChange={handleTypeChange}\r\n            />\r\n            {complexType ? (\r\n                <Select\r\n                    style={{ width: \"fit-content\" }}\r\n                    options={entitiesLabels.filter((elem: string) => elem != entityName)}\r\n                    name=\"field_ref\"\r\n                    value={field.field_ref}\r\n                    onChange={handleRefChange}\r\n                />\r\n            ) : null}\r\n            <Form.Group id=\"formGridCheckbox\">\r\n                <div className=\"d-flex mt-2 flex-row align-items-center\">\r\n                    <div>\r\n                        <Switch\r\n                            name=\"field_required\"\r\n                            onChange={(e: any) => handleChange(e, true)}\r\n                            checked={field.field_required}\r\n                        />\r\n                    </div>\r\n                    <p className=\"ml-1 mb-2\">Required</p>\r\n                </div>\r\n            </Form.Group>\r\n            <Form.Group id=\"formGridCheckbox\">\r\n                <div className=\"d-flex mt-2 flex-row align-items-center\">\r\n                    <div>\r\n                        <Switch\r\n                            name=\"field_unique\"\r\n                            onChange={(e: any) => handleChange(e, true)}\r\n                            checked={field.field_unique}\r\n                        />\r\n                    </div>\r\n                    <p className=\"ml-1 mb-2\">Unique</p>\r\n                </div>\r\n            </Form.Group>\r\n            <EntityButton className=\"mx-1\" onClick={() => onFieldRemove(index)} color=\"#dc3545\" hover=\"#d50014\">\r\n                <img src={xIcon}\r\n                    style={{ filter: 'invert(100%) sepia(0%) saturate(7500%) hue-rotate(72deg) brightness(99%) contrast(99%)' }}\r\n                />\r\n            </EntityButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FieldItem\r\n","export class Field {\r\n    field_name: string;\r\n    field_type: string;\r\n    field_default: string;\r\n    field_required: boolean;\r\n    field_unique: boolean;\r\n    field_ref?: string;\r\n\r\n    constructor(json?: {\r\n        field_name: string,\r\n        field_type: string,\r\n        field_default: string,\r\n        field_required: boolean,\r\n        field_unique: boolean\r\n        field_ref?: string\r\n    }) {\r\n        this.field_name = json?.field_name!;\r\n        this.field_type = json?.field_type!;\r\n        this.field_default = json?.field_default!;\r\n        this.field_required = json?.field_required!;\r\n        this.field_unique = json?.field_unique!;\r\n        this.field_ref = json?.field_ref!;\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Modal, Row } from 'react-bootstrap'\r\nimport { Entity } from '../../../types/Entity'\r\nimport plusIcon from '../../../assets/plus.svg';\r\nimport { EntityButton } from '../EntityButton';\r\nimport FieldItem from '../field/FieldItem';\r\nimport initSettings from '../../../initial_settings.json'\r\nimport { Field } from '../../../types/Field';\r\nimport { Switch } from '../../shared';\r\n\r\ninterface EntityModalProps {\r\n    show: boolean;\r\n    save: any;\r\n    closeModal: any;\r\n    entity: Entity;\r\n    setEntity: any;\r\n    entitiesLabels: string[];\r\n}\r\n\r\nconst EntityModal = ({\r\n    show,\r\n    save,\r\n    closeModal,\r\n    entity,\r\n    setEntity,\r\n    entitiesLabels\r\n}: EntityModalProps) => {\r\n\r\n    const handleChange = (e: any) => {\r\n        setEntity((prev: any) => ({ ...prev, [e.target.name]: e.target.value }))\r\n    }\r\n    const handleCheckBoxChange = (e: any) => {\r\n        setEntity((prev: any) => ({ ...prev, [e.target.name]: !prev[e.target.name] }))\r\n    }\r\n\r\n    const onFieldChange = (e: any, index: number, checkbox?: boolean) => {\r\n        setEntity((prev: Entity) => {\r\n            return {\r\n                ...prev,\r\n                entity_fields: prev.entity_fields.map((field: any, i) => {\r\n                    if (index == i) {\r\n                        return {\r\n                            ...field,\r\n                            [e.target.name]: checkbox ? !field[e.target.name] : e.target.value\r\n                        }\r\n                    }\r\n                    return field\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onFieldTypeChange = (typeOrRef: string, value: string, index: number) => {\r\n        setEntity((prev: Entity) => {\r\n            return {\r\n                ...prev,\r\n                entity_fields: prev.entity_fields.map((field: any, i) => {\r\n                    if (index == i) {\r\n                        return {\r\n                            ...field,\r\n                            [typeOrRef]: value\r\n                        }\r\n                    }\r\n                    return field\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const onFieldRemove = (index: number) => {\r\n        setEntity((prev: Entity) => ({\r\n            ...prev,\r\n            entity_fields: prev.entity_fields.filter((elem: any, i) => i !== index)\r\n        }))\r\n    }\r\n\r\n    const newField = () => {\r\n        console.log(\"NEW FIELD\")\r\n        setEntity((prev: Entity) => ({\r\n            ...prev,\r\n            entity_fields: [...prev.entity_fields, new Field(initSettings.init_field)]\r\n        }))\r\n    }\r\n\r\n    return entity ? (\r\n        <Modal\r\n            show={show}\r\n            onHide={closeModal}\r\n            size=\"xl\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Entity settings\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Row style={{ alignItems: 'center' }} >\r\n                    <div className=\"px-4 py-2 col-6\">\r\n                        {/* <Form.Label>Entity name:</Form.Label> */}\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder=\"Entity name\"\r\n                            value={entity.entity_name}\r\n                            name=\"entity_name\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        {/* <Form.Text className=\"text-muted\">Ex: product</Form.Text> */}\r\n                    </div>\r\n                    <div className=\"p-2 col-3\">\r\n                        <Form.Group id=\"formGridCheckbox\">\r\n                            {/* <Form.Check name=\"entity_timestamp\" checked={entity.entity_timestamp}\r\n                                onChange={handleCheckBoxChange} type=\"checkbox\" label=\"Timestamp\" /> */}\r\n                            <div className=\"d-flex mt-2 flex-row align-items-center\">\r\n                                <div>\r\n                                    <Switch\r\n                                        name=\"entity_timestamp\"\r\n                                        onChange={handleCheckBoxChange}\r\n                                        checked={entity.entity_timestamp}\r\n                                        label=\"Timestamp\"\r\n                                    />\r\n                                </div>\r\n                                <p className=\"ml-1 mb-2\">Timestamp</p>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div className=\"p-2 col-3\">\r\n                        <Form.Group id=\"formGridCheckbox\">\r\n                            <div className=\"d-flex mt-2 flex-row align-items-center\">\r\n                                <div>\r\n                                    <Switch\r\n                                        name=\"entity_paginated\"\r\n                                        onChange={handleCheckBoxChange}\r\n                                        checked={entity.entity_paginated}\r\n                                        label=\"Paginated\"\r\n                                    />\r\n                                </div>\r\n                                <p className=\"ml-1 mb-2\">Paginated</p>\r\n                            </div>\r\n\r\n                            {/* <Form.Check name=\"entity_paginated\" checked={entity.entity_paginated}\r\n                                onChange={handleCheckBoxChange} type=\"checkbox\" label=\"Paginated\" /> */}\r\n                        </Form.Group>\r\n                    </div>\r\n                </Row>\r\n                <div style={{ position: 'relative' }} >\r\n                    <h5 style={{ borderBottom: '1px solid #5c5c5c', padding: '.5rem', color: '#5c5c5c' }}>Fields</h5>\r\n                    <EntityButton absolute top=\"5\" right=\"20\" onClick={newField}>\r\n                        <img src={plusIcon} />\r\n                    </EntityButton>\r\n                </div>\r\n                <div style={{ maxHeight: '30vh', overflowY: 'auto' }}>\r\n                    {entity.entity_fields && entity.entity_fields.map(\r\n                        (field, i) => (\r\n                            <FieldItem key={i} index={i} field={field} onFieldTypeChange={onFieldTypeChange}\r\n                                onFieldChange={onFieldChange} onFieldRemove={onFieldRemove}\r\n                                entitiesLabels={entitiesLabels} entityName={entity.entity_name}\r\n                            />\r\n                        )\r\n                    )}\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={closeModal}>\r\n                    Cancel\r\n                </Button>\r\n                <Button disabled={!entity.entity_name || entity.entity_fields.length <= 0}\r\n                    variant=\"primary\" onClick={save}>\r\n                    Save Changes\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    ) : null\r\n}\r\n\r\nexport default EntityModal\r\n","import styled from \"styled-components\";\r\n\r\nconst Item = styled.div`\r\n    padding: 0.5rem;\r\n    margin: 0.2rem 0;\r\n    height: 40px;\r\n    border-bottom: 0.5px solid lightgray;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: #f4f4f4;\r\n    }\r\n`;\r\n\r\nexport { Item };\r\n","export default __webpack_public_path__ + \"static/media/pencil.372bf1c0.svg\";","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { EditBtn } from './EditBtn'\r\nimport { Item } from './Item'\r\nimport pencilIcon from '../../../assets/pencil.svg';\r\n\r\ninterface EntityItemProps {\r\n    name: string;\r\n    index: number;\r\n    editEntity: any;\r\n}\r\n\r\nconst EntityItem = ({name, index, editEntity} : EntityItemProps) => {\r\n    return (\r\n        <Item>\r\n            <span> {name} </span>\r\n            <div onClick={() => editEntity(index)}>\r\n            <img style={{filter: 'invert(35%) sepia(62%) saturate(5026%) hue-rotate(200deg) brightness(103%) contrast(106%)'}} src={pencilIcon}/>\r\n            </div>\r\n        </Item>\r\n    )\r\n}\r\n\r\nexport default EntityItem\r\n","import React, { useState } from 'react'\r\nimport { ShadowBox } from '../shared'\r\nimport plusIcon from '../../assets/plus.svg';\r\nimport { EntityButton } from './EntityButton';\r\nimport { Entity } from '../../types/Entity';\r\nimport initSettings from '../../initial_settings.json';\r\nimport EntityModal from './entity-modal/EntityModal';\r\nimport EntityItem from './entity-item/EntityItem';\r\n\r\ninterface EntitiesProps {\r\n    entities: Entity[];\r\n    setEntities: any;\r\n    entitiesLabels: string[];\r\n}\r\n\r\nconst Entities = ({\r\n    entities,\r\n    setEntities,\r\n    entitiesLabels\r\n}: EntitiesProps) => {\r\n    const [currentEntity, setCurrentEntity] = useState<Entity>();\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n        setEditMode(false);\r\n    }\r\n    const openModal = () => {\r\n        setShowModal(true);\r\n    }\r\n\r\n    const newEntity = () => {\r\n        setCurrentEntity(new Entity(initSettings.init_entity))\r\n        openModal()\r\n    }\r\n\r\n    const onEntitySave = () => {\r\n        if(editMode){\r\n            setEntities((prev: Entity[]) => (prev.map((elem, i) => {\r\n                if(elem.entity_id === currentEntity?.entity_id){\r\n                    return currentEntity;\r\n                }\r\n            })))\r\n        } else {\r\n            setEntities([...entities, currentEntity])\r\n        }\r\n        setCurrentEntity(new Entity(initSettings.init_entity));\r\n        closeModal()\r\n        setTimeout(() => {\r\n            console.log(entities)\r\n        }, 1000)\r\n    }\r\n\r\n    const editEntity = (index: number) => {\r\n        setCurrentEntity(entities[index])\r\n        setEditMode(true)\r\n        openModal()\r\n    }\r\n\r\n    return (\r\n        <ShadowBox>\r\n            <h5 style={{ borderBottom: '1px solid #5c5c5c', padding: '.5rem', color: '#5c5c5c' }} >Entities</h5>\r\n            <EntityButton absolute onClick={newEntity}>\r\n                <img src={plusIcon} />\r\n            </EntityButton>\r\n            <div style={{overflowY: 'auto'}} >\r\n            {entities && entities.map(\r\n                (entity, i) => (\r\n                    <EntityItem editEntity={editEntity} name={entity.entity_name} index={i} key={i}/>\r\n                )\r\n            )}\r\n            </div>\r\n\r\n            <EntityModal entity={currentEntity!} show={showModal} save={onEntitySave}\r\n                setEntity={setCurrentEntity} closeModal={closeModal} entitiesLabels={entitiesLabels} />\r\n        </ShadowBox>\r\n    )\r\n}\r\n\r\nexport default Entities\r\n","import JSZip from \"jszip\";\r\nimport { Entity } from \"../../../types/Entity\";\r\nimport { Settings } from \"../../../types/Settings\";\r\n\r\n\r\nclass EntitiesGenerator {\r\n\r\n    static async generateEntities(entities: Entity[], settings: Settings, directory: JSZip){\r\n        const { ControllersGenerator } = await import(`./${settings.database}/${settings.database_orm}/controllers-generator`);\r\n        const { ModelsGenerator } = await import(`./${settings.database}/${settings.database_orm}/models-generator`);\r\n        const { RoutesGenerator } = await import(`./${settings.database}/${settings.database_orm}/routes-generator`);\r\n        \r\n        ModelsGenerator.generateModel(entities, directory);\r\n        ControllersGenerator.generateControllers(entities, directory);\r\n        RoutesGenerator.generateRoute(entities, directory)\r\n    }\r\n}\r\n\r\nexport default EntitiesGenerator;","const dbTemplate = () => {\r\n\r\n  return `const mongoose = require('mongoose');\r\n    \r\nconst dbConnect = () => {\r\n  mongoose.connect(process.env.DATABASE_URL, {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true\r\n  });\r\n  const connection = mongoose.connection;\r\n  connection.once('open', async () => {\r\n      console.log('Connected to DataBase');\r\n  })\r\n}\r\n\r\nmodule.exports = dbConnect;`\r\n}\r\n\r\nexport default dbTemplate;","import JSZip from \"jszip\";\r\nimport { Settings } from \"../../../../types/Settings\";\r\nimport dbTemplate from \"./template\";\r\n\r\nclass DatabaseGenerator {\r\n\r\n    static generateDatabase(settings: Settings, directory: JSZip){\r\n        var database = directory?.folder(\"database\");\r\n        database?.file(\"index.js\", dbTemplate());\r\n    }\r\n}\r\n\r\nexport default DatabaseGenerator;","const envTemplate = (settings) => {\r\n\r\n  return `APP_NAME = ${settings.project_name}\r\nDATABASE_URL = mongodb://localhost:27017/${settings.project_name}\r\nPORT = 5000`;\r\n}\r\n\r\nexport default envTemplate;","import { Settings } from \"../../../../types/Settings\";\r\nimport envTemplate from \"./template\";\r\n\r\nclass EnvGenerator {\r\n\r\n    static generateEnv(settings: Settings){\r\n        return envTemplate(settings);\r\n    }\r\n}\r\n\r\nexport default EnvGenerator;","const indexTemplate = (settings) => {\r\n\r\n    return `const express = require('express');\r\nconst app = express();\r\nrequire('dotenv').config();\r\n\r\nconst PORT = process.env.PORT || 4000;\r\n\r\nconst dbConnect = require('./database');\r\nconst globalMiddelwares = require('./middleware');\r\n\r\nglobalMiddelwares(app, __dirname);\r\ndbConnect();\r\n\r\n\r\napp.listen(PORT, () => {\r\n  console.log('Listening on port ' + PORT);\r\n});`\r\n}\r\n\r\nexport default indexTemplate;","import { Settings } from \"../../../../types/Settings\";\r\nimport indexTemplate from \"./template\";\r\n\r\nclass IndexGenerator {\r\n\r\n    static generateIndex(settings: Settings){\r\n        return indexTemplate(settings);\r\n    }\r\n}\r\n\r\nexport default IndexGenerator;","const middlewareTemplate = (entities) => {\r\n\r\n  let entitiesRoutes = '';\r\n  entities.forEach(elem => {\r\n    entitiesRoutes += `app.use('/api/${elem.entity_name.toLowerCase()}', require('../routes/${elem.entity_name.toLowerCase()}.routes'))\r\n  `;\r\n  });\r\n\r\n  return `const express = require('express');\r\nconst cors = require('cors');\r\nconst morgan = require('morgan');\r\nconst path = require('path');\r\n\r\nconst globalMiddelwares = (app, dir) => {\r\n  app.use('/public', express.static(path.join(dir, 'public')));\r\n  app.use(cors());\r\n  app.use(express.json());\r\n  app.use(morgan('dev'));\r\n\r\n  ${entitiesRoutes}\r\n}\r\n\r\nmodule.exports = globalMiddelwares;`\r\n}\r\n\r\nexport default middlewareTemplate;\r\n\r\n\r\n","import JSZip from \"jszip\";\r\nimport { Entity } from \"../../../../types/Entity\";\r\nimport { Settings } from \"../../../../types/Settings\";\r\nimport middlewareTemplate from \"./template\";\r\n\r\nclass MiddlewareGenerator {\r\n\r\n    static generateMiddleware(settings: Settings, entities: Entity[], directory: JSZip){\r\n        var middleware = directory?.folder(\"middleware\");\r\n        middleware?.file(\"index.js\", middlewareTemplate(entities));\r\n    }\r\n}\r\n\r\nexport default MiddlewareGenerator;","import initSettings from '../../../../initial_settings.json'\r\nconst packTemplate = (settings) => {\r\n    let dependencies = '';\r\n    let depArray = settings.dependencies;\r\n\r\n    initSettings.init_dependencies.forEach(element => {\r\n      if(!depArray.find(elem => elem.name === element.name)){\r\n        depArray.push(element)\r\n      }\r\n    });\r\n    if (depArray.length > 0) {\r\n        depArray.forEach((element, i) => {\r\n            dependencies += depArray.length - 1 == i ?\r\n        `\"${element.name}\" : \"${element.version}\"` : \r\n        `\"${element.name}\" : \"${element.version}\",\r\n        `\r\n        });\r\n    }\r\n\r\n    return `\r\n    {\r\n      \"name\": \"${settings.project_name.replace(' ', '-')}\",\r\n      \"version\": \"1.0.0\",\r\n      \"description\": \"\",\r\n      \"main\": \"index.js\",\r\n      \"scripts\": {\r\n        \"start\": \"node index.js\"\r\n      },\r\n      \"keywords\": [],\r\n      \"author\": \"\",\r\n      \"license\": \"ISC\",\r\n      \"dependencies\": {\r\n        ${dependencies}\r\n      }\r\n    }`\r\n}\r\n\r\nexport default packTemplate;","import { Settings } from \"../../../../types/Settings\";\r\nimport packTemplate from \"./template\";\r\n\r\nclass PackageGenerator {\r\n\r\n    static generatePackage(settings: Settings){\r\n        return packTemplate(settings);\r\n    }\r\n}\r\n\r\nexport default PackageGenerator;","import JSZip from \"jszip\";\r\nimport { Entity } from \"../../../types/Entity\";\r\nimport { Settings } from \"../../../types/Settings\";\r\nimport { DatabaseGenerator } from \"./database-generator\";\r\nimport { EnvGenerator } from \"./env-generator\";\r\nimport { IndexGenerator } from \"./index-generator\";\r\nimport { MiddlewareGenerator } from \"./middleware-generator\";\r\nimport { PackageGenerator } from \"./package-generator\";\r\n\r\nclass SetupGenerator {\r\n\r\n    static generateSetup(settings: Settings, entities: Entity[], directory: JSZip){\r\n        directory?.folder(\"public\");\r\n        directory.file(\"package.json\", PackageGenerator.generatePackage(settings));\r\n        directory.file(\".env\", EnvGenerator.generateEnv(settings));\r\n        directory.file(\"index.js\", IndexGenerator.generateIndex(settings));\r\n        \r\n        DatabaseGenerator.generateDatabase(settings, directory);\r\n        MiddlewareGenerator.generateMiddleware(settings, entities, directory);\r\n        \r\n        directory.file(\".gitignore\", `/node_modules\r\n        .env`);\r\n        console.log(\"Setup generator : \", settings);\r\n    }\r\n}\r\n\r\nexport default SetupGenerator;","import { Entity } from \"../../types/Entity\";\r\nimport { Settings } from \"../../types/Settings\";\r\nimport { EntitiesGenerator } from \"./entities-generator\";\r\nimport { SetupGenerator } from \"./setup-generator\";\r\nimport JSZip from \"jszip\";\r\nconst { saveAs } = require('save-as');\r\n\r\nexport class AppGenerator {\r\n\r\n  static generateApp(entities: Entity[], settings: Settings) {\r\n    var zip = new JSZip();\r\n    SetupGenerator.generateSetup(settings, entities, zip);\r\n    EntitiesGenerator.generateEntities(entities, settings, zip)\r\n      .then(() => {\r\n        zip.generateAsync({ type: \"blob\" })\r\n          .then(function (content: any) {\r\n            saveAs(content, settings.project_name.replace(' ', '-') + \".zip\");\r\n          });\r\n      })\r\n  }\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { Button, Row } from 'react-bootstrap';\nimport initSettings from './initial_settings.json';\nimport { Settings } from './types/Settings';\nimport AppSettings from './Components/app-settings/AppSettings';\nimport Entities from './Components/entities/Entities';\nimport { Entity } from './types/Entity';\nimport { useEffect } from 'react';\nimport JSZip from \"jszip\";\nimport { AppGenerator } from './Components/app-generator/AppGenerator';\nconst { saveAs } = require('save-as');\n\nfunction App() {\n  const [settings, setSettings] = useState<Settings>(new Settings(initSettings.init_settings));\n  const [entities, setEntities] = useState<Entity[]>([]);\n  const [entitiesLabels, setEntitiesLabels] = useState<string[]>([]);\n\n\n  const onChangeSettings = (e: any) => {\n    console.log(e.target.value)\n    setSettings({ ...settings, [e.target.name]: e.target.value });\n  }\n\n  useEffect(() => {\n    let res: string[] = [];\n    for (let entity of entities) {\n      res.push(entity.entity_name)\n    }\n    setEntitiesLabels(res);\n  }, [entities])\n\n  const invalidAction = () => {\n    return settings.project_name.trim() == \"\";\n  }\n\n  const generateApp = () => {\n    if(!invalidAction()){\n      AppGenerator.generateApp(entities, settings);\n    }\n    console.log(settings, entities)\n  }\n\n\n  return (\n    <div className=\"p-3 m-auto\" style={{ minHeight: \"100vh\", background: '#f0f0f0b8' }}>\n      <Row className=\"d-flex justify-content-center mt-4\">\n        <h1>Node.js/Express CRUD generator</h1>\n      </Row>\n      <div className=\"d-flex flex-row flex-wrap\">\n        <div className=\"p-1 col-md-8\" style={{ maxHeight: '400px' }}>\n          <AppSettings settings={settings} setSettings={setSettings} onChangeSettings={onChangeSettings} />\n        </div>\n        <div className=\"p-1 col-md-4\" style={{ maxHeight: '400px' }}>\n          <Entities entitiesLabels={entitiesLabels} entities={entities} setEntities={setEntities} />\n        </div>\n      </div>\n      <div className=\"d-flex flex-row flex-wrap mt-4 px-3\">\n        <Button disabled={invalidAction()} onClick={generateApp} variant=\"success\" style={{ boxShadow: '1px 1px 4px 1px rgb(0 0 0 / 20%)' }} >\n          Generate\n        </Button>\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}